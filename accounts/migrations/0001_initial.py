# Generated by Django 3.2.7 on 2021-10-08 22:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_student', models.BooleanField(default=False, verbose_name='student')),
                ('is_company', models.BooleanField(default=False, verbose_name='company')),
                ('is_representative', models.BooleanField(default=False, verbose_name='representative')),
                ('address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=35)),
                ('postal_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^(([0-8][0-9])|(9[0-5])|(2[ab]))[0-9]{3}$', 'The postcode is not valid')], verbose_name='postal code')),
                ('telephone', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^(\\+33|0|0033)[1-9][0-9]{8}$', 'The phone number is not valid')])),
                ('modification', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='company', serialize=False, to='accounts.user')),
                ('siret', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^[1-9][0-9]{13}$', 'the siret is not valid')])),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to='accounts.user')),
                ('student_number', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator('^[1-9][0-9]{7}$', 'The student number is not valid')], verbose_name='student number')),
            ],
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='representative', serialize=False, to='accounts.user')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', to_field='siret')),
            ],
        ),
    ]
